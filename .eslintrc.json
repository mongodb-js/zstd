{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020
  },
  "plugins": ["simple-import-sort", "import", "@typescript-eslint", "prettier", "tsdoc"],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "env": {
    "node": true,
    "mocha": true,
    "es6": true
  },
  "rules": {
    "no-restricted-properties": [
      "error",
      {
        "object": "describe",
        "property": "only"
      },
      {
        "object": "it",
        "property": "only"
      },
      {
        "object": "context",
        "property": "only"
      }
    ],
    "prettier/prettier": "error",
    "tsdoc/syntax": "warn",
    "no-console": "error",
    "valid-typeof": "error",
    "eqeqeq": [
      "error",
      "always",
      {
        "null": "ignore"
      }
    ],
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "strict": ["error", "global"],
    "@typescript-eslint/no-explicit-any": "off",
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": ".",
            "message": "Please import directly from the relevant file instead."
          },
          {
            "name": "..",
            "message": "Please import directly from the relevant file instead."
          }
        ]
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "TSEnumDeclaration",
        "message": "Do not declare enums"
      },
      {
        "selector": "BinaryExpression[operator=/[=!]==/] Identifier[name='undefined']",
        "message": "Do not strictly check undefined"
      },
      {
        "selector": "BinaryExpression[operator=/[=!]==/] Literal[raw='null']",
        "message": "Do not strictly check null"
      },
      {
        "selector": "BinaryExpression[operator=/[=!]==?/] Literal[value='undefined']",
        "message": "Do not strictly check typeof undefined (NOTE: currently this rule only detects the usage of 'undefined' string literal so this could be a misfire)"
      }
    ]
  }
}
